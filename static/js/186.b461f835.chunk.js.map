{"version":3,"file":"static/js/186.b461f835.chunk.js","mappings":"wOA6CA,UAxCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAS,CACX,IAAMG,EAAe,mCAAG,gHAEGC,EAAAA,EAAAA,IAAkBJ,GAFrB,OAEdK,EAFc,OAGdP,EAAUO,EAASC,QAEzBP,EAAWD,GALS,gDAOpBS,EAAAA,GAAAA,MACE,iEARkB,yDAAH,qDAYrBJ,GACD,CACF,GAAE,CAACH,KAGF,8BACGF,EAAQU,QACP,wBACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADE,OAQf,uEAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { fetchMovieReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId) {\n      const getMovieReviews = async () => {\n        try {\n          const response = await fetchMovieReviews(movieId);\n          const reviews = response.results;\n          // console.log(reviews);\n          setReviews(reviews);\n        } catch {\n          toast.error(\n            'Failed to load movie cast information, please reload the page'\n          );\n        }\n      };\n      getMovieReviews();\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h4>We don't have any reviews for this movie.</h4>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","response","results","toast","length","map","id","author","content"],"sourceRoot":""}