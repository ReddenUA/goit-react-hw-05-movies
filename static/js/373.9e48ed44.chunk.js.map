{"version":3,"file":"static/js/373.9e48ed44.chunk.js","mappings":"sRAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,wCCRYE,EAAcN,EAAAA,GAAAA,IAAH,qIASXO,EAAWP,EAAAA,GAAAA,IAAH,yGAWRQ,EAAaR,EAAAA,GAAAA,GAAH,gDC2EvB,EAzFqB,WAAO,IAAD,IACzB,GAA0BS,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAI7CC,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAAS,CACX,IAAMQ,EAAY,mCAAG,oGAEjBT,GAAa,GAFI,UAGMU,EAAAA,EAAAA,IAAeT,GAHrB,OAGXU,EAHW,OAMjBb,EAFca,GAJG,gDAQjBC,EAAAA,GAAAA,MACE,qEATe,yBAYjBZ,GAAa,GAZI,4EAAH,qDAelBS,GACD,CACF,GAAE,CAACR,IAEJ,MAOIJ,EANFgB,OAAAA,OADF,MACW,GADX,EAEEC,EAKEjB,EALFiB,SACAC,EAIElB,EAJFkB,YACAC,EAGEnB,EAHFmB,aACAC,EAEEpB,EAFFoB,MACAC,EACErB,EADFqB,aAEIC,EAAO,IAAIC,KAAKJ,GAAcK,cAI9BC,EAAeT,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAEpDC,GAA4B,GAAfT,GAAmBU,QAAQ,GAE9C,OACE,iCACE,SAACvC,EAAD,CAAUC,GAAIe,IACbN,IAAa,SAAC8B,EAAA,EAAD,KACd,UAACpC,EAAD,YACE,gBACEqC,IAAKf,GAAW,UAbP,6BAaO,eAAsBA,GACtCgB,MAAM,MACNC,IAAKf,KAEP,UAACvB,EAAD,YACE,0BACGuB,EADH,KACYE,EADZ,QAGA,wCAAgBQ,EAAhB,QACA,sCACA,uBAAIb,KACJ,oCACA,uBAAIQ,WAGR,SAAC3B,EAAD,sCACA,2BACE,yBACE,SAAC,KAAD,CAAML,GAAG,OAAOgB,MAAOH,EAASG,MAAhC,qBAIF,yBACE,SAAC,KAAD,CAAMhB,GAAG,UAAUgB,MAAOH,EAASG,MAAnC,2BAKJ,mBACA,SAAC,EAAA2B,SAAD,CAAUC,UAAU,SAACL,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MainContent = styled.div`\n  display: flex;\n  justify-content: start;\n\n  padding-bottom: 12px;\n\n  border-bottom: 1px solid black;\n`;\n\nexport const MainInfo = styled.div`\n  padding: 16px;\n\n  > h2,\n  h3,\n  h4,\n  p {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Additional = styled.h3`\n  margin-bottom: 12px;\n`;\n","import { fetchMovieById } from 'api';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Additional, MainContent, MainInfo } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  // console.log(movieId);\n  // console.log('MovieDetails location:', location.state);\n\n  useEffect(() => {\n    if (movieId) {\n      const getMovieById = async () => {\n        try {\n          setIsLoading(true);\n          const response = await fetchMovieById(movieId);\n          const movie = response;\n          // console.log(movie);\n          setMovie(movie);\n        } catch {\n          toast.error(\n            'Failed to load movie detailed information, please reload the page'\n          );\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      getMovieById();\n    }\n  }, [movieId]);\n\n  const {\n    genres = [],\n    overview,\n    poster_path,\n    release_date,\n    title,\n    vote_average,\n  } = movie;\n  const year = new Date(release_date).getFullYear();\n  const base_url = 'http://image.tmdb.org/t/p/';\n  // console.log(year);\n  // console.log(genres);\n  const genresString = genres.map(genre => genre.name).join(' ');\n  // console.log(genresString);\n  const userScore = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}></BackLink>\n      {isLoading && <Loader />}\n      <MainContent>\n        <img\n          src={poster_path && `${base_url}w300${poster_path}`}\n          width=\"300\"\n          alt={title}\n        />\n        <MainInfo>\n          <h2>\n            {title} ({year})\n          </h2>\n          <p>User Score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genresString}</p>\n        </MainInfo>\n      </MainContent>\n      <Additional>Additional Information</Additional>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={location.state}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={location.state}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","MainContent","MainInfo","Additional","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","getMovieById","fetchMovieById","response","toast","genres","overview","poster_path","release_date","title","vote_average","year","Date","getFullYear","genresString","map","genre","name","join","userScore","toFixed","Loader","src","width","alt","Suspense","fallback"],"sourceRoot":""}